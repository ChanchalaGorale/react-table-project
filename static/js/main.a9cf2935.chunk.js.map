{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["TabPane","Tabs","callback","key","console","log","App","useState","transdata","settransdata","holdingdata","setholdingdata","useEffect","a","axios","get","then","res","data","transactions","transaction","payload","holding","className","defaultActiveKey","onChange","tab","pagination","position","columns","title","dataIndex","dataSource","bordered","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uSAKQA,EAAYC,IAAZD,QAER,SAASE,EAASC,GAChBC,QAAQC,IAAIF,GAGC,SAASG,IAAO,IAAD,EACMC,qBADN,mBACrBC,EADqB,KACVC,EADU,OAEUF,qBAFV,mBAErBG,EAFqB,KAERC,EAFQ,KAO5BC,oBAAS,sBAAC,8BAAAC,EAAA,sEACkBC,IAAMC,IAHjB,4DAG+BC,MAAK,SAAAC,GAAG,OAAUA,EAAIC,KAAKC,gBADjE,cACFC,EADE,gBAEcN,IAAMC,IALX,wDAK2BC,MAAK,SAAAC,GAAG,OAAUA,EAAIC,KAAKG,WAF/D,OAEFC,EAFE,OAIRb,EAAa,YAAIW,IACjBT,EAAe,YAAIW,IAEnBlB,QAAQC,IAAIK,GAPJ,2CAQP,IAyEH,OACE,qBAAKa,UAAU,kBAAf,SACE,eAAC,IAAD,CAAMC,iBAAiB,IAAIC,SAAUvB,EAArC,UACE,cAACF,EAAD,CAAS0B,IAAI,qBAAb,SACE,cAAC,IAAD,CAAOC,WAAY,CAAEC,SAAU,CAAC,iBAAmBC,QA3EtC,CACnB,CACEC,MAAO,OACPC,UAAW,OACX5B,IAAK,QAEP,CACE2B,MAAO,aACPC,UAAW,YACX5B,IAAK,aAEP,CACE2B,MAAO,cACPC,UAAW,YACX5B,IAAK,aAEP,CACE2B,MAAO,MACPC,UAAW,WACX5B,IAAK,YAEP,CACE2B,MAAO,WACPC,UAAW,WACX5B,IAAK,YAEP,CACE2B,MAAO,oBACPC,UAAW,oBACX5B,IAAK,sBA8CyE6B,WAAYxB,EAAWyB,UAAQ,KADrE,KAGtC,cAACjC,EAAD,CAAS0B,IAAI,gBAAb,SACE,cAAC,IAAD,CAAOC,WAAY,CAAEC,SAAU,CAAC,iBAAmBC,QA7CpC,CACrB,CACEC,MAAO,OACPC,UAAW,OACX5B,IAAK,QAEP,CACE2B,MAAO,SACPC,UAAW,SACX5B,IAAK,UAEP,CACE2B,MAAO,cACPC,UAAW,cACX5B,IAAK,eAEP,CACE2B,MAAO,gBACPC,UAAW,YACX5B,IAAK,aAEP,CACE2B,MAAO,eACPC,UAAW,eACX5B,IAAK,gBAEP,CACE2B,MAAO,2BACPC,UAAW,iBACX5B,IAAK,kBAEP,CACE2B,MAAO,mBACPC,UAAW,mBACX5B,IAAK,qBAW2E6B,WAAYtB,EAAauB,UAAQ,KAD9E,UCzGzC,IAYeC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBpB,MAAK,YAAkD,IAA/CqB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a9cf2935.chunk.js","sourcesContent":["import \"./App.css\";\nimport { Tabs, Table } from 'antd';\nimport React, { useState, useEffect } from 'react'\nimport axios from \"axios\";\n\nconst { TabPane } = Tabs;\n\nfunction callback(key) {\n  console.log(key);\n}\n\nexport default function App() {\n  const [transdata, settransdata] = useState()\n  const [holdingdata, setholdingdata] = useState()\n\n  const holdingURL = \"https://canopy-frontend-task.vercel.app/api/holdings\"\n  const transURL = \"https://canopy-frontend-task.vercel.app/api/transactions\"\n\n  useEffect(async () => {\n    const transaction = await axios.get(transURL).then(res => res = res.data.transactions)\n    const holding = await axios.get(holdingURL).then(res => res = res.data.payload)\n\n    settransdata([...transaction])\n    setholdingdata([...holding])\n\n    console.log(holdingdata)\n  }, [])\n\n  const transcolumns = [\n    {\n      title: 'Name',\n      dataIndex: 'name',\n      key: 'name',\n    },\n    {\n      title: 'Ticket Ref',\n      dataIndex: 'ticketref',\n      key: 'ticketref',\n    },\n    {\n      title: 'Traded Date',\n      dataIndex: 'traded_on',\n      key: 'traded_on',\n    },\n    {\n      title: 'QTY',\n      dataIndex: 'quantity',\n      key: 'quantity',\n    },\n    {\n      title: 'Currency',\n      dataIndex: 'currency',\n      key: 'currency',\n    },\n    {\n      title: 'Settlement Amount',\n      dataIndex: 'settlement_amount',\n      key: 'settlement_amount',\n    },\n  ]\n\n  const holdingcolumns = [\n    {\n      title: 'Name',\n      dataIndex: 'name',\n      key: 'name',\n    },\n    {\n      title: 'Ticker',\n      dataIndex: 'ticker',\n      key: 'ticker',\n    },\n    {\n      title: 'Asset Class',\n      dataIndex: 'asset_class',\n      key: 'asset_class',\n    },\n    {\n      title: 'Average Price',\n      dataIndex: 'avg_price',\n      key: 'avg_price',\n    },\n    {\n      title: 'Market Price',\n      dataIndex: 'market_price',\n      key: 'market_price',\n    },\n    {\n      title: 'Latest Percentage Change',\n      dataIndex: 'latest_chg_pct',\n      key: 'latest_chg_pct',\n    },\n    {\n      title: 'Market value CCY',\n      dataIndex: 'market_value_ccy',\n      key: 'market_value_ccy',\n    },\n  ]\n\n  return (\n    <div className=\"app text-center\">\n      <Tabs defaultActiveKey=\"1\" onChange={callback}>\n        <TabPane tab=\"Transactions Table\" key=\"1\">\n          <Table pagination={{ position: ['bottomCenter'] }} columns={transcolumns} dataSource={transdata} bordered />\n        </TabPane>\n        <TabPane tab=\"Holding Table\" key=\"2\">\n          <Table pagination={{ position: ['bottomCenter'] }} columns={holdingcolumns} dataSource={holdingdata} bordered />\n        </TabPane>\n      </Tabs>\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'antd/dist/antd.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}