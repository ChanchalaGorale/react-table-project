{"version":3,"sources":["Transtable.js","Holdingtable.js","App.js","reportWebVitals.js","index.js"],"names":["Table","columns","data","fetchData","loading","controlledPageCount","pageCount","useTable","initialState","pageIndex","pageSize","manualPagination","useSortBy","useColumnOrder","usePagination","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","canPreviousPage","canNextPage","pageOptions","gotoPage","nextPage","visibleColumns","previousPage","setPageSize","setColumnOrder","state","randomizeColumns","arr","shuffled","length","rand","Math","floor","random","push","splice","shuffle","map","d","id","React","useEffect","type","className","onClick","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","scope","render","isSorted","isSortedDesc","row","i","getRowProps","cells","cell","getCellProps","colSpan","disabled","style","display","defaultValue","onChange","e","target","value","Number","width","Transtable","useMemo","Header","accessor","useState","setData","transData","setTransdata","setLoading","setPageCount","fetchIdRef","useRef","a","fetch","response","json","transactions","gettransdata","console","log","useCallback","fetchId","current","setTimeout","startRow","endRow","slice","ceil","Holdingtable","holdData","setHolddata","holding","payload","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.01b331cf.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  useTable,\n  useSortBy,\n  usePagination,\n  useColumnOrder,\n} from \"react-table\";\n\nfunction shuffle(arr) {\n  arr = [...arr];\n  const shuffled = [];\n  while (arr.length) {\n    const rand = Math.floor(Math.random() * arr.length);\n    shuffled.push(arr.splice(rand, 1)[0]);\n  }\n  return shuffled;\n}\n\nfunction Table({\n  columns,\n  data,\n  fetchData,\n  loading,\n  pageCount: controlledPageCount,\n}) {\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    prepareRow,\n    page,\n    canPreviousPage,\n    canNextPage,\n    pageOptions,\n    pageCount,\n    gotoPage,\n    nextPage,\n    visibleColumns,\n    previousPage,\n    setPageSize,\n    setColumnOrder,\n\n    state: { pageIndex, pageSize },\n  } = useTable(\n    {\n      columns,\n      data,\n      initialState: { pageIndex: 0, pageSize: 10 },\n      manualPagination: true,\n      pageCount: controlledPageCount,\n    },\n    useSortBy,\n    useColumnOrder,\n\n    usePagination\n  );\n\n  const originalOrder = () => {\n    setColumnOrder([\n      \"name\",\n      \"ticketref\",\n      \"traded_on\",\n      \"quantity\",\n      \"currency\",\n      \"settlement_amount\",\n    ]);\n  };\n  const changeOrder = () => {\n    setColumnOrder([\n      \"name\",\n      \"ticketref\",\n      \"quantity\",\n      \"settlement_amount\",\n      \"traded_on\",\n      \"currency\",\n    ]);\n  };\n\n  const randomizeColumns = () => {\n    setColumnOrder(shuffle(visibleColumns.map((d) => d.id)));\n  };\n  React.useEffect(() => {\n    fetchData({ pageIndex, pageSize });\n  }, [fetchData, pageIndex, pageSize]);\n  return (\n    <>\n      <button type=\"button\" className=\"btn btn-primary\" onClick={originalOrder}>\n        Original Column order\n      </button>\n\n      <button type=\"button\" className=\"btn btn-primary\" onClick={changeOrder}>\n        Change Column order\n      </button>\n      <button\n        type=\"button\"\n        className=\"btn btn-primary\"\n        onClick={() => randomizeColumns({})}\n      >\n        Random Columns\n      </button>\n      <table {...getTableProps()} className=\"table table-bordered\">\n        <thead>\n          {headerGroups.map((headerGroup) => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column) => (\n                <th\n                  {...column.getHeaderProps(column.getSortByToggleProps())}\n                  scope=\"col\"\n                >\n                  {column.render(\"Header\")}\n                  <span>\n                    {column.isSorted\n                      ? column.isSortedDesc\n                        ? \" 🔽\"\n                        : \" 🔼\"\n                      : \"\"}\n                  </span>\n                </th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {page.map((row, i) => {\n            prepareRow(row);\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map((cell) => {\n                  return (\n                    <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\n                  );\n                })}\n              </tr>\n            );\n          })}\n          <tr>\n            {loading ? (\n              <td colSpan=\"10000\">Loading...</td>\n            ) : (\n              <td colSpan=\"10000\" className=\"text-center\">\n                Showing {page.length} of ~{controlledPageCount * pageSize}{\" \"}\n                results\n              </td>\n            )}\n          </tr>\n        </tbody>\n      </table>\n\n      <div className=\"pagination\">\n        <button\n          type=\"button\"\n          className=\"btn btn-primary\"\n          onClick={() => gotoPage(0)}\n          disabled={!canPreviousPage}\n        >\n          {\"<<\"}\n        </button>{\" \"}\n        <button\n          type=\"button\"\n          className=\"btn btn-primary\"\n          onClick={() => previousPage()}\n          disabled={!canPreviousPage}\n        >\n          {\"<\"}\n        </button>{\" \"}\n        <span>\n          Page{\" \"}\n          <strong>\n            {pageIndex + 1} of {pageOptions.length}\n          </strong>{\" \"}\n        </span>\n        <button\n          type=\"button\"\n          className=\"btn btn-primary\"\n          onClick={() => nextPage()}\n          disabled={!canNextPage}\n        >\n          {\">\"}\n        </button>{\" \"}\n        <button\n          type=\"button\"\n          className=\"btn btn-primary\"\n          onClick={() => gotoPage(pageCount - 1)}\n          disabled={!canNextPage}\n        >\n          {\">>\"}\n        </button>{\" \"}\n        <div style={{ display: \"none\" }}>\n          <span>\n            | Go to page:{\" \"}\n            <input\n              type=\"number\"\n              defaultValue={pageIndex + 1}\n              onChange={(e) => {\n                const page = e.target.value ? Number(e.target.value) - 1 : 0;\n                gotoPage(page);\n              }}\n              style={{ width: \"100px\" }}\n            />\n          </span>\n          <select\n            value={pageSize}\n            onChange={(e) => {\n              setPageSize(Number(e.target.value));\n            }}\n          >\n            {[10, 20, 30, 40, 50].map((pageSize) => (\n              <option key={pageSize} value={pageSize}>\n                Show {pageSize}\n              </option>\n            ))}\n          </select>\n        </div>\n      </div>\n    </>\n  );\n}\n\nfunction Transtable() {\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: \"Name\",\n        accessor: \"name\",\n      },\n      {\n        Header: \"Ticket Ref\",\n        accessor: \"ticketref\",\n      },\n      {\n        Header: \"Trade Date\",\n        accessor: \"traded_on\",\n      },\n      {\n        Header: \"QTY\",\n        accessor: \"quantity\",\n      },\n      {\n        Header: \"CCY\",\n        accessor: \"currency\",\n      },\n      {\n        Header: \"Settlement Amount\",\n        accessor: \"settlement_amount\",\n      },\n    ],\n    []\n  );\n\n  const [data, setData] = React.useState([]);\n  const [transData, setTransdata] = React.useState([]);\n  const [loading, setLoading] = React.useState(false);\n  const [pageCount, setPageCount] = React.useState(0);\n  const fetchIdRef = React.useRef(0);\n\n  React.useEffect(() => {\n    setLoading(true);\n    async function gettransdata() {\n      const response = await fetch(\n        \"https://canopy-frontend-task.vercel.app/api/transactions\"\n      );\n      const data = await response.json();\n      const transactions = data.transactions;\n      setTransdata(transactions);\n    }\n    gettransdata();\n\n    console.log(transData);\n    setLoading(false);\n  }, []);\n\n  const fetchData = React.useCallback(({ pageSize, pageIndex }) => {\n    const fetchId = ++fetchIdRef.current;\n\n    setLoading(true);\n\n    setTimeout(() => {\n      if (fetchId === fetchIdRef.current) {\n        const startRow = pageSize * pageIndex;\n        const endRow = startRow + pageSize;\n        setData(transData.slice(startRow, endRow));\n\n        setPageCount(Math.ceil(transData.length / pageSize));\n\n        setLoading(false);\n      }\n    }, 1000);\n  }, []);\n\n  return (\n    <Table\n      columns={columns}\n      data={data}\n      fetchData={fetchData}\n      loading={loading}\n      pageCount={pageCount}\n    />\n  );\n}\n\nexport default Transtable;\n","import {\n  useTable,\n  useSortBy,\n  usePagination,\n  useColumnOrder,\n} from \"react-table\";\nimport React from \"react\";\n\nfunction shuffle(arr) {\n  arr = [...arr];\n  const shuffled = [];\n  while (arr.length) {\n    const rand = Math.floor(Math.random() * arr.length);\n    shuffled.push(arr.splice(rand, 1)[0]);\n  }\n  return shuffled;\n}\nfunction Table({\n  columns,\n  data,\n  fetchData,\n  loading,\n  pageCount: controlledPageCount,\n}) {\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    prepareRow,\n    page,\n    canPreviousPage,\n    canNextPage,\n    pageOptions,\n    pageCount,\n    gotoPage,\n    nextPage,\n    visibleColumns,\n    previousPage,\n    setPageSize,\n    state: { pageIndex, pageSize },\n    setColumnOrder,\n  } = useTable(\n    {\n      columns,\n      data,\n      initialState: { pageIndex: 0, pageSize: 10 },\n      manualPagination: true,\n      pageCount: controlledPageCount,\n    },\n    useSortBy,\n    useColumnOrder,\n    usePagination\n  );\n\n  const originalOrder = () => {\n    setColumnOrder([\n      \"name\",\n      \"ticker\",\n      \"asset_class\",\n      \"avg_price\",\n      \"market_price\",\n      \"latest_chg_pct\",\n      \"market_value_ccy\",\n    ]);\n  };\n\n  const changeOrder = () => {\n    setColumnOrder([\n      \"name\",\n      \"ticker\",\n      \"avg_price\",\n      \"market_price\",\n      \"latest_chg_pct\",\n      \"asset_class\",\n      \"market_value_ccy\",\n    ]);\n  };\n  const randomizeColumns = () => {\n    setColumnOrder(shuffle(visibleColumns.map((d) => d.id)));\n  };\n\n  React.useEffect(() => {\n    fetchData({ pageIndex, pageSize });\n  }, [fetchData, pageIndex, pageSize]);\n\n  return (\n    <>\n      <button type=\"button\" className=\"btn btn-primary\" onClick={originalOrder}>\n        Original order Column order\n      </button>\n      <button type=\"button\" className=\"btn btn-primary\" onClick={changeOrder}>\n        Important Column order\n      </button>\n      <button\n        type=\"button\"\n        className=\"btn btn-primary\"\n        onClick={() => randomizeColumns({})}\n      >\n        Random Columns\n      </button>\n      <table {...getTableProps()} className=\"table table-bordered\">\n        <thead>\n          {headerGroups.map((headerGroup) => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column) => (\n                <th\n                  {...column.getHeaderProps(column.getSortByToggleProps())}\n                  scope=\"col\"\n                >\n                  {column.render(\"Header\")}\n                  <span>\n                    {column.isSorted\n                      ? column.isSortedDesc\n                        ? \" 🔽\"\n                        : \" 🔼\"\n                      : \"\"}\n                  </span>\n                </th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {page.map((row, i) => {\n            prepareRow(row);\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map((cell) => {\n                  return (\n                    <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\n                  );\n                })}\n              </tr>\n            );\n          })}\n          <tr>\n            {loading ? (\n              <td colSpan=\"10000\">Loading...</td>\n            ) : (\n              <td colSpan=\"10000\" className=\"text-center\">\n                Showing {page.length} of ~{controlledPageCount * pageSize}{\" \"}\n                results\n              </td>\n            )}\n          </tr>\n        </tbody>\n      </table>\n\n      <div className=\"pagination\">\n        <button\n          type=\"button\"\n          className=\"btn btn-primary\"\n          onClick={() => gotoPage(0)}\n          disabled={!canPreviousPage}\n        >\n          {\"<<\"}\n        </button>{\" \"}\n        <button\n          type=\"button\"\n          className=\"btn btn-primary\"\n          onClick={() => previousPage()}\n          disabled={!canPreviousPage}\n        >\n          {\"<\"}\n        </button>{\" \"}\n        <span>\n          Page{\" \"}\n          <strong>\n            {pageIndex + 1} of {pageOptions.length}\n          </strong>{\" \"}\n        </span>\n        <button\n          type=\"button\"\n          className=\"btn btn-primary\"\n          onClick={() => nextPage()}\n          disabled={!canNextPage}\n        >\n          {\">\"}\n        </button>{\" \"}\n        <button\n          type=\"button\"\n          className=\"btn btn-primary\"\n          onClick={() => gotoPage(pageCount - 1)}\n          disabled={!canNextPage}\n        >\n          {\">>\"}\n        </button>{\" \"}\n        <div style={{ display: \"none\" }}>\n          <span>\n            | Go to page:{\" \"}\n            <input\n              type=\"number\"\n              defaultValue={pageIndex + 1}\n              onChange={(e) => {\n                const page = e.target.value ? Number(e.target.value) - 1 : 0;\n                gotoPage(page);\n              }}\n              style={{ width: \"100px\" }}\n            />\n          </span>\n          <select\n            value={pageSize}\n            onChange={(e) => {\n              setPageSize(Number(e.target.value));\n            }}\n          >\n            {[10, 20, 30, 40, 50].map((pageSize) => (\n              <option key={pageSize} value={pageSize}>\n                Show {pageSize}\n              </option>\n            ))}\n          </select>\n        </div>\n      </div>\n    </>\n  );\n}\n\nfunction Holdingtable() {\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: \"Name of the holding\",\n        accessor: \"name\",\n      },\n      {\n        Header: \"Ticker\",\n        accessor: \"ticker\",\n      },\n      {\n        Header: \"The asset class it belongs to\",\n        accessor: \"asset_class\",\n      },\n      {\n        Header: \"Average price\",\n        accessor: \"avg_price\",\n      },\n      {\n        Header: \"Market Price\",\n        accessor: \"market_price\",\n      },\n      {\n        Header: \"Latest change percentage\",\n        accessor: \"latest_chg_pct\",\n      },\n      {\n        Header: \"Market Value in Base CCY\",\n        accessor: \"market_value_ccy\",\n      },\n    ],\n    []\n  );\n\n  const [data, setData] = React.useState([]);\n  const [holdData, setHolddata] = React.useState([]);\n  const [loading, setLoading] = React.useState(false);\n  const [pageCount, setPageCount] = React.useState(0);\n  const fetchIdRef = React.useRef(0);\n\n  React.useEffect(() => {\n    setLoading(true);\n    async function gettransdata() {\n      const response = await fetch(\n        \"https://canopy-frontend-task.vercel.app/api/holdings\"\n      );\n      const data = await response.json();\n      const holding = data.payload;\n      setHolddata(holding);\n    }\n    gettransdata();\n\n    console.log(holdData);\n    setLoading(false);\n  }, []);\n\n  const fetchData = React.useCallback(({ pageSize, pageIndex }) => {\n    const fetchId = ++fetchIdRef.current;\n\n    setLoading(true);\n\n    setTimeout(() => {\n      if (fetchId === fetchIdRef.current) {\n        const startRow = pageSize * pageIndex;\n        const endRow = startRow + pageSize;\n        setData(holdData.slice(startRow, endRow));\n\n        setPageCount(Math.ceil(holdData.length / pageSize));\n\n        setLoading(false);\n      }\n    }, 1000);\n  }, []);\n\n  return (\n    <Table\n      columns={columns}\n      data={data}\n      fetchData={fetchData}\n      loading={loading}\n      pageCount={pageCount}\n    />\n  );\n}\n\nexport default Holdingtable;\n","import Transtable from \"./Transtable\";\nimport Holdingtable from \"./Holdingtable\";\nimport \"./App.css\";\n\nexport default function App() {\n  return (\n    <div className=\"app\">\n      <div className=\"app__table\">\n        <h1>Transactions</h1>\n        <Transtable />\n      </div>\n      <div className=\"app__table\">\n        <h1>Holding</h1>\n        <Holdingtable />\n      </div>\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}